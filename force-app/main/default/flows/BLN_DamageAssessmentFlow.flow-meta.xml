<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Apex_Action_on_Case_records</name>
        <label>Apex Action on Case records</label>
        <locationX>1665</locationX>
        <locationY>398</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Apex_Action_on_Logo_Image_records</name>
        <label>Apex Action on Logo Image records</label>
        <locationX>873</locationX>
        <locationY>722</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <decisions>
        <description>FOUK-8107 This is used to decide repair or replacement type.</description>
        <name>BLN_CheckRepairOrReplacement</name>
        <label>Check Repair Or Replacement</label>
        <locationX>266</locationX>
        <locationY>815</locationY>
        <defaultConnector>
            <targetReference>BLN_DamageAssessmentQuestinaries</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>isReplacement</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isReplacements</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>true</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Identify_Damage</targetReference>
            </connector>
            <label>isReplacement</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_name_is_passed</name>
        <label>Check name is passed</label>
        <locationX>228</locationX>
        <locationY>1038</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>transactionIdAndHoleId</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>transactionIdone</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>vehcileholeidone</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>BLN_DamageAssessmentQuestinaries</targetReference>
            </connector>
            <label>transactionIdAndHoleId</label>
        </rules>
    </decisions>
    <decisions>
        <name>Null_Check</name>
        <label>Null Check</label>
        <locationX>1096</locationX>
        <locationY>290</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_no_null_records</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_case_record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>To_check_vehicle_record_association</targetReference>
            </connector>
            <label>If no null records</label>
        </rules>
    </decisions>
    <decisions>
        <name>Null_check_for_Logo_Image_Records</name>
        <label>Null check for Logo Image Records</label>
        <locationX>444</locationX>
        <locationY>614</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_records_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Fetch_logo_image</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>selectServiceTypeScreen</targetReference>
            </connector>
            <label>If records Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>To_check_vehicle_record_association</name>
        <label>To check vehicle record association</label>
        <locationX>791</locationX>
        <locationY>398</locationY>
        <defaultConnector>
            <targetReference>warningScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Vehicle record not found</defaultConnectorLabel>
        <rules>
            <name>Vehicle_record_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_case_record.BLN_Vehicle__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Fetch_logo_image</targetReference>
            </connector>
            <label>Vehicle record found</label>
        </rules>
    </decisions>
    <description>FOUK-580,FOUK-1181, FOUK-4621 This flow is used to start the Damage Assessment process on job request case.</description>
    <environments>Default</environments>
    <interviewLabel>Damage Assessment Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Damage Assessment</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_Exception_Record_for_Case_Records</name>
        <label>Create Exception Record for Case Records</label>
        <locationX>1665</locationX>
        <locationY>290</locationY>
        <connector>
            <targetReference>Apex_Action_on_Case_records</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_DamageAssessmentFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>Get_case_record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Record_for_Logo_Image</name>
        <label>Create Exception Record for Logo Image</label>
        <locationX>873</locationX>
        <locationY>614</locationY>
        <connector>
            <targetReference>Apex_Action_on_Logo_Image_records</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_DamageAssessmentFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>Fetch_logo_image.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Fetch_logo_image</name>
        <label>Fetch logo image</label>
        <locationX>444</locationX>
        <locationY>506</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Null_check_for_Logo_Image_Records</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Record_for_Logo_Image</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BLN_AutoglassLogo</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>StaticResource</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_case_record</name>
        <label>Get case record</label>
        <locationX>1096</locationX>
        <locationY>182</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Null_Check</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Record_for_Case_Records</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>BLN_Vehicle__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>Identify_Damage</name>
        <label>Identify Damage</label>
        <locationX>50</locationX>
        <locationY>860</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Check_name_is_passed</targetReference>
        </connector>
        <fields>
            <name>unbleToRetriveCompo</name>
            <fieldText>&lt;p&gt;&lt;em&gt;{!$Label.BLN_IdentifyDamageQuestion}&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Label.BLN_FromGpsSchematic}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>UnableToRetrieveVehicleCmp</name>
            <extensionName>c:bln_VehicleSchematicCmp</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId.Id</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>recordId.Id</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>schematicScrren</name>
            <extensionName>c:bln_DamageAssesmentSchematicScreen</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>recordId.Id</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>transactionIdone</assignToReference>
                <name>transactionId</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>vehcileholeidone</assignToReference>
                <name>vehicleHoleId</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>holeTypeOne</assignToReference>
                <name>holetype</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>pidQuestionOne</assignToReference>
                <name>pidQuestion</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>bomIdOne</assignToReference>
                <name>bomId</name>
            </outputParameters>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>FOUK-8107</description>
        <name>selectServiceTypeScreen</name>
        <label>selectServiceTypeScreen</label>
        <locationX>215</locationX>
        <locationY>668</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>BLN_CheckRepairOrReplacement</targetReference>
        </connector>
        <fields>
            <name>selectServiceType</name>
            <extensionName>c:bln_SelectServiceType</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>isReplacement</name>
                <value>
                    <elementReference>isReplacements</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>vehicleId</name>
                <value>
                    <elementReference>Get_case_record.BLN_Vehicle__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>isRepair</assignToReference>
                <name>isRepair</name>
            </outputParameters>
            <outputParameters>
                <assignToReference>isReplacements</assignToReference>
                <name>isReplacement</name>
            </outputParameters>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>warningScreen</name>
        <label>warningScreen</label>
        <locationX>1137</locationX>
        <locationY>506</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ShowWarning</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: 16px;&quot;&gt;{!$Label.BLN_VehicleWarningMessage}﻿&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>970</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>Get_case_record</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>BLN_DamageAssessmentQuestinaries</name>
        <label>Damage Assessment Questinaries</label>
        <locationX>442</locationX>
        <locationY>990</locationY>
        <flowName>BLN_DamageAssessmentHasDamageBeenRepairedBefore</flowName>
        <inputAssignments>
            <name>bomIdInput</name>
            <value>
                <elementReference>bomIdOne</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>caseRecordIdInput</name>
            <value>
                <elementReference>recordId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>HoleType</name>
            <value>
                <elementReference>holeTypeOne</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>IsWindScreenInput</name>
            <value>
                <elementReference>Iswindscreen</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>pidQuestionInput</name>
            <value>
                <elementReference>pidQuestionOne</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>serviceTypeReplacement</name>
            <value>
                <elementReference>isReplacements</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>transactionidInput</name>
            <value>
                <elementReference>transactionIdone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>vehicleholeIdInput</name>
            <value>
                <elementReference>vehcileholeidone</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>isReplacements</assignToReference>
            <name>serviceTypeReplacement</name>
        </outputAssignments>
    </subflows>
    <variables>
        <name>bomIdOne</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>holeTypeOne</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>isRepair</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>isReplacements</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>FOUK-8107 This variable is used for Select Service Type screen.</description>
        <name>IsServTypeRepair</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>FOUK-8107 This is used for Select Service Type Screen</description>
        <name>isServTypeReplacement</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>Iswindscreen</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <elementReference>UnableToRetrieveVehicleCmp.IsWindscreen</elementReference>
        </value>
    </variables>
    <variables>
        <name>pidQuestionOne</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>transactionIdone</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>vehcileholeidone</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
