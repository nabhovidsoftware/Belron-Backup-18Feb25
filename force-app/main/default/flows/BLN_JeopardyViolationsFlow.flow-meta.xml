<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Apex_Error_for_CPT_Promise_Date_Task</name>
        <label>Apex Error for CPT Promise Date Task</label>
        <locationX>314</locationX>
        <locationY>2759</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Apex_Error_for_Get_Task</name>
        <label>Apex Error for Get Task</label>
        <locationX>754</locationX>
        <locationY>1487</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Apex_Error_for_Get_Tasks</name>
        <label>Apex Error for Get Tasks</label>
        <locationX>754</locationX>
        <locationY>2543</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Apex_Error_for_Get_the_tasks</name>
        <label>Apex Error for Get the tasks</label>
        <locationX>1062</locationX>
        <locationY>3491</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Apex_Error_for_Jeopardy_Notification</name>
        <label>Apex Error for Jeopardy Notification</label>
        <locationX>1854</locationX>
        <locationY>647</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Apex_Error_for_No_Stock_Queue</name>
        <label>Apex Error for No Stock Queue</label>
        <locationX>2118</locationX>
        <locationY>539</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Apex_Error_for_Service_Task_RT</name>
        <label>Apex Error for Service Task RT</label>
        <locationX>1590</locationX>
        <locationY>755</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Apex_Error_for_Stock_Exception_Task</name>
        <label>Apex Error for Stock Exception Task</label>
        <locationX>314</locationX>
        <locationY>1703</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Apex_Error_for_Update_the_Related_Task</name>
        <label>Apex Error for Update the Related Task</label>
        <locationX>798</locationX>
        <locationY>4091</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Apex_Error_for_Updated_Related_SA</name>
        <label>Apex Error for Updated Related SA</label>
        <locationX>1018</locationX>
        <locationY>2435</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Apex_Error_for_Updated_Related_SA_Record</name>
        <label>Apex Error for Updated Related SA Record</label>
        <locationX>1018</locationX>
        <locationY>971</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Error_Update_Service_Appointment</name>
        <label>Error Update Service Appointment</label>
        <locationX>534</locationX>
        <locationY>4199</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Jeopardy_Notification</name>
        <label>Send Jeopardy Notification</label>
        <locationX>182</locationX>
        <locationY>1079</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Get_Task</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Get_Jeopardy_Notification.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>ownerIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>{!$Record.Order.BLN_Case__r.CaseNumber} {!$Label.BLN_JeopardyNotificationSubject}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.BLN_ServiceAppointment__r.AppointmentNumber} {!$Label.BLN_JeopardyNotificationBody}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Order.BLN_Case__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Assign_Case_OwnerIds</name>
        <label>Assign Case OwnerIds</label>
        <locationX>182</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>ownerIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Order.BLN_Case__r.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Jeopardy_Notification</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_task_fields</name>
        <label>Assign task fields</label>
        <locationX>358</locationX>
        <locationY>3599</locationY>
        <assignmentItems>
            <assignToReference>Iterate_over_Tasks.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Iterate_over_Tasks.BLN_ResolutionReason__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No Changes Required</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Iterate_over_Tasks</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_over_Tasks</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_if_Case_ownerId_starts_with_005</name>
        <label>Check if Case ownerId starts with 005</label>
        <locationX>314</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>Get_Task</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>OwnerId_starts_with_005</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Order.BLN_Case__r.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Case_OwnerIds</targetReference>
            </connector>
            <label>OwnerId starts with 005</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_OLI_status</name>
        <label>Check OLI status</label>
        <locationX>798</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>Check_SA_promise_date</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>OLI_status</name>
            <conditionLogic>1 AND (2 OR 3 OR 4 OR 5) AND 6 AND 7 AND 8 AND 9</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_StockStatus__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_StockStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Backordered</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_StockStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Issue</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_StockStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Not Requested</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_StockStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CPT Line Cancelled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_No_Stock_queue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Jeopardy_Notification</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Service_Task_RT</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Update_the_Related_Task</leftValueReference>
                <operator>WasVisited</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_related_SA_record</targetReference>
            </connector>
            <label>OLI status</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_SA_promise_date</name>
        <label>Check SA promise date</label>
        <locationX>798</locationX>
        <locationY>2111</locationY>
        <defaultConnector>
            <targetReference>If_OLI_status_are_not_of_values</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SA_promise_date</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_PromiseDate__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_ServiceAppointment__r.SchedStartTime</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>$Record.BLN_PromiseDate__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_related_SA</targetReference>
            </connector>
            <label>SA promise date</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_OLI_status_are_not_of_values</name>
        <label>If OLI status are not of values</label>
        <locationX>798</locationX>
        <locationY>3167</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>OLI_status_check</name>
            <conditionLogic>(1 AND 2 AND 3 AND 4 AND 5) OR (6 AND 7)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_StockStatus__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Backordered</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_StockStatus__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Issue</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_StockStatus__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Not Requested</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_StockStatus__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>CPT Line Cancelled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_StockStatus__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_PromiseDate__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_ServiceAppointment__r.BLN_ScheduleStartDate__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.BLN_PromiseDate__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_the_Tasks</targetReference>
            </connector>
            <label>OLI status check</label>
        </rules>
    </decisions>
    <decisions>
        <name>Null_Check_for_Task</name>
        <label>Null Check for Task</label>
        <locationX>314</locationX>
        <locationY>2435</locationY>
        <defaultConnector>
            <targetReference>If_OLI_status_are_not_of_values</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Task_Null_Check</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Tasks</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_CPT_Promise_Date_Task</targetReference>
            </connector>
            <label>Task Null Check</label>
        </rules>
    </decisions>
    <decisions>
        <name>Null_Check_for_Task_records</name>
        <label>Null Check for Task records</label>
        <locationX>490</locationX>
        <locationY>3491</locationY>
        <defaultConnector>
            <targetReference>Iterate_over_Tasks</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Tasks_Null_Check</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_the_Tasks</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_task_fields</targetReference>
            </connector>
            <label>Tasks Null Check</label>
        </rules>
    </decisions>
    <decisions>
        <name>Null_Check_for_Tasks</name>
        <label>Null Check for Tasks</label>
        <locationX>314</locationX>
        <locationY>1379</locationY>
        <defaultConnector>
            <targetReference>Check_SA_promise_date</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_records_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Task</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_No_Stock_queue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Service_Task_RT</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Stock_Exception_Task</targetReference>
            </connector>
            <label>If records exist</label>
        </rules>
    </decisions>
    <description>FOUK-5614, 5576, 5578: This flow is created for Jeopardy Violations scenarios.</description>
    <environments>Default</environments>
    <interviewLabel>Jeopardy Violations Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Jeopardy Violations Flow</label>
    <loops>
        <name>Iterate_over_Tasks</name>
        <label>Iterate over Tasks</label>
        <locationX>270</locationX>
        <locationY>3383</locationY>
        <collectionReference>Get_the_Tasks</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Null_Check_for_Task_records</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_the_Related_Task</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_CPT_Promise_Date_Task</name>
        <label>Create CPT Promise Date Task</label>
        <locationX>50</locationX>
        <locationY>2543</locationY>
        <connector>
            <targetReference>If_OLI_status_are_not_of_values</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Records_for_CPT_Promise_Date</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>BLN_IsAutomated__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ServiceAppointment__c</field>
            <value>
                <elementReference>$Record.BLN_ServiceAppointment__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_Subtype__c</field>
            <value>
                <stringValue>CPT Promise Date</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_TaskSubjectType__c</field>
            <value>
                <stringValue>CPT Promise Date later than Appointment Date</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_No_Stock_queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>Get_Service_Task_RT.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>CPT Promise Date</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>CPT Promise Date</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Order.BLN_Case__c</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Records_for_CPT_Promise_Date</name>
        <label>Create Exception Records for CPT Promise Date</label>
        <locationX>314</locationX>
        <locationY>2651</locationY>
        <connector>
            <targetReference>Apex_Error_for_CPT_Promise_Date_Task</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Records_for_Get_Task</name>
        <label>Create Exception Records for Get Task</label>
        <locationX>754</locationX>
        <locationY>1379</locationY>
        <connector>
            <targetReference>Apex_Error_for_Get_Task</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Get_Task.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Records_for_Get_Tasks</name>
        <label>Create Exception Records for Get Tasks</label>
        <locationX>754</locationX>
        <locationY>2435</locationY>
        <connector>
            <targetReference>Apex_Error_for_Get_Tasks</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Get_Tasks.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Records_for_Get_The_Tasks</name>
        <label>Create Exception Records for Get The Tasks</label>
        <locationX>1062</locationX>
        <locationY>3383</locationY>
        <connector>
            <targetReference>Apex_Error_for_Get_the_tasks</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Iterate_over_Tasks.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Records_for_Jeopardy_Notification</name>
        <label>Create Exception Records for Jeopardy Notification</label>
        <locationX>1854</locationX>
        <locationY>539</locationY>
        <connector>
            <targetReference>Apex_Error_for_Jeopardy_Notification</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Get_Jeopardy_Notification.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Records_for_No_Stock_Queue</name>
        <label>Create Exception Records for No Stock Queue</label>
        <locationX>2118</locationX>
        <locationY>431</locationY>
        <connector>
            <targetReference>Apex_Error_for_No_Stock_Queue</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Get_No_Stock_queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Records_for_Service_Task_RT</name>
        <label>Create Exception Records for Service Task RT</label>
        <locationX>1590</locationX>
        <locationY>647</locationY>
        <connector>
            <targetReference>Apex_Error_for_Service_Task_RT</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Get_Service_Task_RT.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Records_for_Stock_Exception_Task</name>
        <label>Create Exception Records for Stock Exception Task</label>
        <locationX>314</locationX>
        <locationY>1595</locationY>
        <connector>
            <targetReference>Apex_Error_for_Stock_Exception_Task</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Records_for_Update_Related_SA</name>
        <label>Create Exception Records for Update Related SA</label>
        <locationX>1018</locationX>
        <locationY>2327</locationY>
        <connector>
            <targetReference>Apex_Error_for_Updated_Related_SA</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Update_related_SA_record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Records_for_Update_the_Related_Task</name>
        <label>Create Exception Records for Update the Related Task</label>
        <locationX>798</locationX>
        <locationY>3983</locationY>
        <connector>
            <targetReference>Apex_Error_for_Update_the_Related_Task</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Update_the_Related_Task</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Update_Related_SA_Record</name>
        <label>Create Exception Update Related SA Record</label>
        <locationX>1018</locationX>
        <locationY>863</locationY>
        <connector>
            <targetReference>Apex_Error_for_Updated_Related_SA_Record</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Update_related_SA</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Stock_Exception_Task</name>
        <label>Create Stock Exception Task</label>
        <locationX>50</locationX>
        <locationY>1487</locationY>
        <connector>
            <targetReference>Check_SA_promise_date</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Records_for_Stock_Exception_Task</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>BLN_IsAutomated__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ServiceAppointment__c</field>
            <value>
                <elementReference>$Record.BLN_ServiceAppointment__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_Subtype__c</field>
            <value>
                <stringValue>Stock Exception</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_TaskSubjectType__c</field>
            <value>
                <stringValue>Stock Exception</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_No_Stock_queue.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>Get_Service_Task_RT.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Stock Exception</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Stock Exception</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Order.BLN_Case__c</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Exception_on_Update_Service_appointment</name>
        <label>Exception on Update Service appointment</label>
        <locationX>534</locationX>
        <locationY>4091</locationY>
        <connector>
            <targetReference>Error_Update_Service_Appointment</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_JeopardyViolationsFlow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Update_Service_Appointment</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Jeopardy_Notification</name>
        <label>Get Jeopardy Notification</label>
        <locationX>798</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Service_Task_RT</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Records_for_Jeopardy_Notification</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BLN_JeopardyNotification</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_No_Stock_queue</name>
        <label>Get No Stock queue</label>
        <locationX>798</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Jeopardy_Notification</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Records_for_No_Stock_Queue</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.BLN_NoStock</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Service_Task_RT</name>
        <label>Get Service Task RT</label>
        <locationX>798</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_OLI_status</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Records_for_Service_Task_RT</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.BLN_ServiceTask</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Task</name>
        <label>Get Task</label>
        <locationX>314</locationX>
        <locationY>1271</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Null_Check_for_Tasks</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Records_for_Get_Task</targetReference>
        </faultConnector>
        <filterLogic>1 AND 2 AND 3 AND 4 AND 5</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Stock Exception</stringValue>
            </value>
        </filters>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Order.BLN_Case__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>BLN_ServiceAppointment__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BLN_ServiceAppointment__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Service_Task_RT.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Tasks</name>
        <label>Get Tasks</label>
        <locationX>314</locationX>
        <locationY>2327</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Null_Check_for_Task</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Records_for_Get_Tasks</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CPT Promise Date</stringValue>
            </value>
        </filters>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Order.BLN_Case__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>BLN_ServiceAppointment__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BLN_ServiceAppointment__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Service_Task_RT.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_the_Tasks</name>
        <label>Get the Tasks</label>
        <locationX>270</locationX>
        <locationY>3275</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Iterate_over_Tasks</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Records_for_Get_The_Tasks</targetReference>
        </faultConnector>
        <filterLogic>(1 OR 2) AND 3 AND 4 AND 5 AND 6</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Stock Exception</stringValue>
            </value>
        </filters>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CPT Promise Date</stringValue>
            </value>
        </filters>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Order.BLN_Case__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>BLN_ServiceAppointment__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BLN_ServiceAppointment__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Service_Task_RT.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_related_SA</name>
        <label>Update related SA</label>
        <locationX>314</locationX>
        <locationY>2219</locationY>
        <connector>
            <targetReference>Get_Tasks</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Records_for_Update_Related_SA</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BLN_ServiceAppointment__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>BLN_Jeopardy__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>ServiceAppointment</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_related_SA_record</name>
        <label>Update related SA record</label>
        <locationX>314</locationX>
        <locationY>755</locationY>
        <connector>
            <targetReference>Check_if_Case_ownerId_starts_with_005</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Update_Related_SA_Record</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BLN_ServiceAppointment__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>BLN_Jeopardy__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>ServiceAppointment</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Service_Appointment</name>
        <label>Update Service Appointment</label>
        <locationX>270</locationX>
        <locationY>3983</locationY>
        <faultConnector>
            <targetReference>Exception_on_Update_Service_appointment</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BLN_ServiceAppointment__r.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>BLN_Jeopardy__c</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <object>ServiceAppointment</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_the_Related_Task</name>
        <label>Update the Related Task</label>
        <locationX>270</locationX>
        <locationY>3875</locationY>
        <connector>
            <targetReference>Update_Service_Appointment</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Records_for_Update_the_Related_Task</targetReference>
        </faultConnector>
        <inputReference>taskRecord</inputReference>
    </recordUpdates>
    <start>
        <locationX>672</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_No_Stock_queue</targetReference>
        </connector>
        <filterFormula>AND(NOT(ISPICKVAL({!$Record.BLN_StockStatus__c}, &apos;&apos;)),
NOT(ISBLANK({!$Record.BLN_ServiceAppointment__c})),
OR(ISNEW(), ISCHANGED({!$Record.BLN_StockStatus__c}), ISCHANGED({!$Record.BLN_PromiseDate__c})),
NOT({!$Permission.BLN_BypassFlows})
)</filterFormula>
        <object>OrderItem</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>ownerIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>taskRecord</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
    <variables>
        <name>taskRecords</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
