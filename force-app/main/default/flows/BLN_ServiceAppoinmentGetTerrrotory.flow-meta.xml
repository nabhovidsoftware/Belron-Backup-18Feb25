<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Dummy_Assignment</name>
        <label>Dummy Assignment</label>
        <locationX>1349</locationX>
        <locationY>222</locationY>
        <assignmentItems>
            <assignToReference>DummyVar</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_SA_Assignment</name>
        <label>Update SA Assignment</label>
        <locationX>1353</locationX>
        <locationY>392</locationY>
        <assignmentItems>
            <assignToReference>$Record.BLN_EndTimeSlots__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getStartTime.StartTimeformula__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.BLN_StartTimeSlots__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getEndTime.EndTimeFormula__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Main_Decision_Check</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>GetEndTimeCheck</name>
        <label>GetEndTimeCheck</label>
        <locationX>1135</locationX>
        <locationY>547</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ET_Not_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getEndTime</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_SA_Assignment</targetReference>
            </connector>
            <label>ET Not Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>GetStartTSCheck</name>
        <label>GetStartTSCheck</label>
        <locationX>815</locationX>
        <locationY>664</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ST_Not_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getEndTime</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getEndTime</targetReference>
            </connector>
            <label>ST Not Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>GetSTCheck</name>
        <label>GetSTCheck</label>
        <locationX>813</locationX>
        <locationY>438</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>STnotNull</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetTerritory</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getStartTime</targetReference>
            </connector>
            <label>STnotNull</label>
        </rules>
    </decisions>
    <decisions>
        <name>Main_Decision_Check</name>
        <label>Main Decision Check</label>
        <locationX>818</locationX>
        <locationY>310</locationY>
        <defaultConnector>
            <targetReference>Dummy_Assignment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Null_Check</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_Case__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Permission.BLN_BypassFlows</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ServiceTerritoryId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Update_SA_Assignment</leftValueReference>
                <operator>WasVisited</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetTerritory</targetReference>
            </connector>
            <label>Case Null Check</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>ServiceAppoinmentGetTerrrotory {!$Flow.CurrentDateTime}</interviewLabel>
    <label>ServiceAppoinmentGetTerritory</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>getEndTime</name>
        <label>getEndTime</label>
        <locationX>985</locationX>
        <locationY>545</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetEndTimeCheck</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OperatingHoursId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetTerritory.OperatingHours.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>TimeSlot</object>
        <sortField>EndTime</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getStartTime</name>
        <label>getStartTime</label>
        <locationX>558</locationX>
        <locationY>559</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetStartTSCheck</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OperatingHoursId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetTerritory.OperatingHours.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>TimeSlot</object>
        <sortField>StartTime</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetTerritory</name>
        <label>GetTerritory</label>
        <locationX>558</locationX>
        <locationY>307</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetSTCheck</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceTerritory.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceTerritory</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>731</locationX>
        <locationY>27</locationY>
        <connector>
            <targetReference>Main_Decision_Check</targetReference>
        </connector>
        <object>ServiceAppointment</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>DummyVar</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OpHoursCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OperatingHours</objectType>
    </variables>
    <variables>
        <name>TimeSlotsCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>TimeSlot</objectType>
    </variables>
    <variables>
        <name>TimeTextNew</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>getEndTime.EndTime</elementReference>
        </value>
    </variables>
</Flow>
