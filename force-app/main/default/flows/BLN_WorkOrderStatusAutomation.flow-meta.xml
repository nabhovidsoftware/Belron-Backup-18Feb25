<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Copy_1_of_Flow_Exception</name>
        <label>Copy 1 of Flow Exception</label>
        <locationX>1370</locationX>
        <locationY>1979</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Flow_Exception</name>
        <label>Flow Exception</label>
        <locationX>314</locationX>
        <locationY>2519</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Flow_Exception3</name>
        <label>Flow Exception</label>
        <locationX>1898</locationX>
        <locationY>1979</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Assignement_All_Line_Item_For_Count</name>
        <label>Assignement All Line Item For Count</label>
        <locationX>1865</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>CountAllStatus</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_WorkOrder_LI_All_Record_0</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CheckNullRecords</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Complete_And_CanNot_Complete_And_Cancled_Count</name>
        <label>Complete And CanNot Complete And Cancled Count</label>
        <locationX>2184</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>CompleteCanNotCompleteCount</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_For_Statement_Wise_Assignment</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Count_InProgress_Status</name>
        <label>Count InProgress Status</label>
        <locationX>1920</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>CountInprogressStatus</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_For_Statement_Wise_Assignment</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Count_Open_Status_Assignment</name>
        <label>Count Open Status Assignment</label>
        <locationX>1656</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>CountOpenStatus</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_For_Statement_Wise_Assignment</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>New_Assignment_Count</name>
        <label>New Assignment Count</label>
        <locationX>1392</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>CountNewStatus</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_For_Statement_Wise_Assignment</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Case_Null_Check</name>
        <label>Case Null Check</label>
        <locationX>446</locationX>
        <locationY>1871</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetCase</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetTasks</targetReference>
            </connector>
            <label>Case Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_All_WOLI_Complete</name>
        <label>Check All WOLI Complete</label>
        <locationX>314</locationX>
        <locationY>2195</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>All_Completed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CountAllStatus</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>CompleteCanNotCompleteCount</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateWOStatus</targetReference>
            </connector>
            <label>All Completed</label>
        </rules>
    </decisions>
    <decisions>
        <name>check_status</name>
        <label>check status</label>
        <locationX>1304</locationX>
        <locationY>1655</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Status_is_completed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetCase</leftValueReference>
                <operator>WasVisited</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCase</targetReference>
            </connector>
            <label>Status is completed</label>
        </rules>
        <rules>
            <name>Status_is_Not_Completed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Canceled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Cannot Complete</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Update_Work_Order_Status1</leftValueReference>
                <operator>WasVisited</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Work_Order_Status1</targetReference>
            </connector>
            <label>Status is Not Completed</label>
        </rules>
        <rules>
            <name>Check_Latest_Woli_Cancelled_or_Cannot_Complete</name>
            <conditionLogic>(1 OR 3) AND 2</conditionLogic>
            <conditions>
                <leftValueReference>Get_Latest_WOLI.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Canceled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Update_Latest_Work_Order_Status_Cancelled</leftValueReference>
                <operator>WasVisited</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Latest_WOLI.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cannot Complete</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Latest_Work_Order_Status_Cancelled</targetReference>
            </connector>
            <label>Check Latest Woli Cancelled or Cannot Complete</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckNullRecords</name>
        <label>CheckNullRecords</label>
        <locationX>1865</locationX>
        <locationY>755</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NullRecords</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CountAllStatus</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_For_Statement_Wise_Assignment</targetReference>
            </connector>
            <label>NullRecords</label>
        </rules>
    </decisions>
    <decisions>
        <name>GetAllWOLIRecords</name>
        <label>GetAllWOLIRecords</label>
        <locationX>2277</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>GetallWOLIFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_WorkOrder_LI_All_Record_0</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assignement_All_Line_Item_For_Count</targetReference>
            </connector>
            <label>GetallWOLIFound</label>
        </rules>
    </decisions>
    <decisions>
        <name>record_found</name>
        <label>record found</label>
        <locationX>50</locationX>
        <locationY>2087</locationY>
        <defaultConnector>
            <targetReference>Check_All_WOLI_Complete</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>record_is_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetTasks</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>record is found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Status_Decision</name>
        <label>Status Decision</label>
        <locationX>1920</locationX>
        <locationY>971</locationY>
        <defaultConnector>
            <targetReference>Loop_For_Statement_Wise_Assignment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>NewStatusDecision</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_For_Statement_Wise_Assignment.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>New_Assignment_Count</targetReference>
            </connector>
            <label>NewStatusDecision</label>
        </rules>
        <rules>
            <name>Open_Status_Decision</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_For_Statement_Wise_Assignment.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Open</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Count_Open_Status_Assignment</targetReference>
            </connector>
            <label>Open Status Decision</label>
        </rules>
        <rules>
            <name>In_Progress_Status_Decision</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_For_Statement_Wise_Assignment.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>In Progress</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Count_InProgress_Status</targetReference>
            </connector>
            <label>In Progress Status Decision</label>
        </rules>
        <rules>
            <name>ByPass_On_Update_Decision</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Loop_For_Statement_Wise_Assignment.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_For_Statement_Wise_Assignment.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cannot Complete</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_For_Statement_Wise_Assignment.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Canceled</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Complete_And_CanNot_Complete_And_Cancled_Count</targetReference>
            </connector>
            <label>ByPass On Update Decision</label>
        </rules>
    </decisions>
    <decisions>
        <name>Update_Status_Decision</name>
        <label>Update Status Decision</label>
        <locationX>1304</locationX>
        <locationY>1355</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>New_Status_Update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CountNewStatus</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>CountAllStatus</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>check_status</targetReference>
            </connector>
            <label>New Status Update</label>
        </rules>
        <rules>
            <name>Open_Status_Update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Open</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CountOpenStatus</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CountInprogressStatus</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CompleteCanNotCompleteCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>check_status</targetReference>
            </connector>
            <label>Open Status Update</label>
        </rules>
        <rules>
            <name>In_Progress_Status_update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>In Progress</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CountInprogressStatus</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CompleteCanNotCompleteCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>check_status</targetReference>
            </connector>
            <label>In Progress Status update</label>
        </rules>
        <rules>
            <name>Update_Complete_OR_not_Complete_Or_Cancelled</name>
            <conditionLogic>(1 OR 2 OR 3) AND 4</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cannot Complete</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Canceled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.WorkType.BLN_IsMainJob__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>check_status</targetReference>
            </connector>
            <label>Update Complete OR not Complete Or Cancelled</label>
        </rules>
    </decisions>
    <description>FOUK-30
FOUK-5770, Update Printing Status to &quot;Ready For Print&quot; when no email is available.</description>
    <environments>Default</environments>
    <formulas>
        <name>CurrentUserId</name>
        <dataType>String</dataType>
        <expression>{!$User.Id}</expression>
    </formulas>
    <interviewLabel>BLN_WorkOrderStatusAutomation {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Work Order Status Automation</label>
    <loops>
        <name>Loop_For_Statement_Wise_Assignment</name>
        <label>Loop For Statement Wise Assignment</label>
        <locationX>1304</locationX>
        <locationY>863</locationY>
        <collectionReference>Get_WorkOrder_LI_All_Record_0</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Status_Decision</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Status_Decision</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Copy_1_of_Create_Exception_Flow</name>
        <label>Copy 1 of Create Exception Flow</label>
        <locationX>1370</locationX>
        <locationY>1871</locationY>
        <connector>
            <targetReference>Copy_1_of_Flow_Exception</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_WorkOrderStatusAutomation</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Update_Work_Order_Status1</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_ExceptionLogger__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Flow</name>
        <label>Create Exception Flow</label>
        <locationX>314</locationX>
        <locationY>2411</locationY>
        <connector>
            <targetReference>Flow_Exception</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_WorkOrderStatusAutomation</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>UpdateWOStatus</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_ExceptionLogger__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Flow3</name>
        <label>Create Exception Flow</label>
        <locationX>1898</locationX>
        <locationY>1871</locationY>
        <connector>
            <targetReference>Flow_Exception3</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_WorkOrderStatusAutomation</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Update_Latest_Work_Order_Status_Cancelled</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_ExceptionLogger__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Latest_WOLI</name>
        <label>Get Latest WOLI</label>
        <locationX>2277</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetAllWOLIRecords</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WorkOrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkOrderId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>WorkOrderLineItem</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_WorkOrder_LI_All_Record_0</name>
        <label>Get WorkOrder LI All Record</label>
        <locationX>2277</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Latest_WOLI</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WorkOrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkOrderId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>WorkOrderLineItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCase</name>
        <label>Get Case</label>
        <locationX>446</locationX>
        <locationY>1763</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Case_Null_Check</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkOrder.CaseId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetTasks</name>
        <label>Get Tasks</label>
        <locationX>50</locationX>
        <locationY>1979</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>record_found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCase.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Latest_Work_Order_Status_Cancelled</name>
        <label>Update Latest Work Order Status Cancelled</label>
        <locationX>1634</locationX>
        <locationY>1763</locationY>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>check_status</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Flow3</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkOrderId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <elementReference>$Record.Status</elementReference>
            </value>
        </inputAssignments>
        <object>WorkOrder</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Work_Order_Status1</name>
        <label>Update Work Order Status</label>
        <locationX>1106</locationX>
        <locationY>1763</locationY>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>check_status</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Copy_1_of_Create_Exception_Flow</targetReference>
        </faultConnector>
        <filterLogic>1</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkOrderId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <elementReference>$Record.Status</elementReference>
            </value>
        </inputAssignments>
        <object>WorkOrder</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateWOStatus</name>
        <label>Update Work Order Status</label>
        <locationX>50</locationX>
        <locationY>2303</locationY>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>check_status</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Flow</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkOrderId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <elementReference>$Record.Status</elementReference>
            </value>
        </inputAssignments>
        <object>WorkOrder</object>
    </recordUpdates>
    <start>
        <locationX>2151</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_WorkOrder_LI_All_Record_0</targetReference>
        </connector>
        <filterFormula>AND(ISCHANGED({!$Record.Status}), NOT(ISPICKVAL({!$Record.Status}, &apos;New&apos;)),
NOT({!$Permission.BLN_BypassFlows})
)</filterFormula>
        <object>WorkOrderLineItem</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>Add_Duration</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>WorkOrderLineItem</objectType>
    </variables>
    <variables>
        <name>CompleteCanNotCompleteCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>CountAllStatus</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>CountInprogressStatus</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>CountNewStatus</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>CountOpenStatus</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>dummyVar</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>NewStatusTrueBoolean</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </variables>
</Flow>
