<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Assign_Owner_to_Customer_Provisional_Queue</name>
        <label>Assign Owner to Customer Provisional Queue</label>
        <locationX>490</locationX>
        <locationY>827</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Customer_Provisional_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SubType_Check</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Owner_to_Provisional_Queue</name>
        <label>Assign Owner to Provisional Queue</label>
        <locationX>50</locationX>
        <locationY>827</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Provisional_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SubType_Check</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Owner_to_Quality_Queue</name>
        <label>Assign Owner to Quality Queue</label>
        <locationX>930</locationX>
        <locationY>719</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Quality_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SubType_Check</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Owner_to_Recovery_Queue</name>
        <label>Assign Owner to Recovery Queue</label>
        <locationX>1370</locationX>
        <locationY>719</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Recovery_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SubType_Check</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Owner_to_Special_Queue</name>
        <label>Assign Owner to Special Queue</label>
        <locationX>985</locationX>
        <locationY>1703</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Special_Queue.Id</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>Check_Booking_Status</name>
        <label>Check Booking Status</label>
        <locationX>1106</locationX>
        <locationY>395</locationY>
        <defaultConnector>
            <targetReference>SubType_Check</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Provisional</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_BookingStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Provisional</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Coverage_Verification</targetReference>
            </connector>
            <label>Provisional</label>
        </rules>
        <rules>
            <name>Quality</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_BookingStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quality</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Quality_Queue</targetReference>
            </connector>
            <label>Quality</label>
        </rules>
        <rules>
            <name>Recovery</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_BookingStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Recovery</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Recovery_Queue</targetReference>
            </connector>
            <label>Recovery</label>
        </rules>
    </decisions>
    <decisions>
        <name>Coverage_Verification</name>
        <label>Coverage Verification</label>
        <locationX>402</locationX>
        <locationY>503</locationY>
        <defaultConnector>
            <targetReference>Get_Customer_Provisional_Queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Checked</name>
            <conditionLogic>1 OR (2 AND 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_CoverageVerificationTheme__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_BillingMethod__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cash</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_Corporate__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Provisional_Queue</targetReference>
            </connector>
            <label>Is Checked</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_6</name>
        <label>Is Null Check</label>
        <locationX>182</locationX>
        <locationY>719</locationY>
        <defaultConnector>
            <targetReference>SubType_Check</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Outcome_1_of_Decision_6</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Provisional_Queue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Owner_to_Provisional_Queue</targetReference>
            </connector>
            <label>Is Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Null_Check</name>
        <label>Is Null Check</label>
        <locationX>622</locationX>
        <locationY>719</locationY>
        <defaultConnector>
            <targetReference>SubType_Check</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Customer_Provisional_Queue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Owner_to_Customer_Provisional_Queue</targetReference>
            </connector>
            <label>Is Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Null_Check_Quality</name>
        <label>Is Null Check</label>
        <locationX>1062</locationX>
        <locationY>611</locationY>
        <defaultConnector>
            <targetReference>SubType_Check</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Null_Quality_Record</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Quality_Queue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Owner_to_Quality_Queue</targetReference>
            </connector>
            <label>Is Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Null_Check_Specials</name>
        <label>Is Null Check</label>
        <locationX>1117</locationX>
        <locationY>1595</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Null_Specials</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Special_Queue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Owner_to_Special_Queue</targetReference>
            </connector>
            <label>Is Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Null_Recovery</name>
        <label>Is Null Check</label>
        <locationX>1502</locationX>
        <locationY>611</locationY>
        <defaultConnector>
            <targetReference>SubType_Check</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Null_Recovery_Record</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Recovery_Queue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Owner_to_Recovery_Queue</targetReference>
            </connector>
            <label>Is Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Subtype_JobRequest</name>
        <label>Is Subtype JobRequest</label>
        <locationX>1546</locationX>
        <locationY>287</locationY>
        <defaultConnector>
            <targetReference>SubType_Check</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_JobRequest</name>
            <conditionLogic>1 AND ( 2 OR 3 OR 4) AND 5</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_SubType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Phone</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Web</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_BookingStatus__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Booking_Status</targetReference>
            </connector>
            <label>Is JobRequest</label>
        </rules>
    </decisions>
    <decisions>
        <name>Special_Vehicle_check</name>
        <label>Special Vehicle check</label>
        <locationX>1315</locationX>
        <locationY>1379</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Special_Vehicle</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_Vehicle__r.BLN_SpecialVehicle__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Special_Queue</targetReference>
            </connector>
            <label>Is Special Vehicle</label>
        </rules>
    </decisions>
    <decisions>
        <name>SubType_Check</name>
        <label>SubType Check</label>
        <locationX>1546</locationX>
        <locationY>1271</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Special</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_SubType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_SubType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Warranty</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Special_Vehicle_check</targetReference>
            </connector>
            <label>Is SubType</label>
        </rules>
    </decisions>
    <description>FOUK-2698: This flow is created to automatically route the cases  to Queues on the basis of  criteria</description>
    <environments>Default</environments>
    <interviewLabel>Case Queue Management {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Queue Management</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Customer_Provisional_Queue</name>
        <label>Get Customer Provisional Queue</label>
        <locationX>622</locationX>
        <locationY>611</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Null_Check</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BLN_CustomerProvisional</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Provisional_Queue</name>
        <label>Get Provisional Queue</label>
        <locationX>182</locationX>
        <locationY>611</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_6</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BLN_Provisional</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Quality_Queue</name>
        <label>Get Quality Queue</label>
        <locationX>1062</locationX>
        <locationY>503</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Null_Check_Quality</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BLN_Quality</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Recovery_Queue</name>
        <label>Get Recovery Queue</label>
        <locationX>1502</locationX>
        <locationY>503</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Null_Recovery</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BLN_RecoveryTeamQueue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Special_Queue</name>
        <label>Get Special Queue</label>
        <locationX>1117</locationX>
        <locationY>1487</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Null_Check_Specials</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BLN_SpecialTeam</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>1420</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Is_Subtype_JobRequest</targetReference>
        </connector>
        <filterFormula>AND( NOT {!$Permission.BLN_BypassFlows}, 
          OR(ISPICKVAL({!$Record.BLN_SubType__c}, &apos;Job Request&apos;), 
                ISPICKVAL({!$Record.BLN_SubType__c}, &apos;Warranty&apos;)), 
          OR ( ISNEW(), 
                  ISCHANGED({!$Record.BLN_SubType__c}), 
                  ISCHANGED({!$Record.BLN_BookingStatus__c}), 
                  ISCHANGED({!$Record.Origin}),
                  ISCHANGED({!$Record.BLN_CoverageVerificationTheme__c})),
 NOT(ISNULL(TEXT({!$Record.BLN_CnRReason__c})))
)</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
