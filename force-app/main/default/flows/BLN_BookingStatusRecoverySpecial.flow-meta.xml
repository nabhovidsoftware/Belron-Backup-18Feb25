<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>Booking_Status_Is_Recovery</name>
        <label>Booking Status Is Recovery</label>
        <locationX>248</locationX>
        <locationY>1511</locationY>
        <assignmentItems>
            <assignToReference>BookingStatus</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Recovery</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Owner_Booking_Status_for_other_condition</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Owner_Booking_Status_for_other_condition</name>
        <label>Owner &amp; Booking Status for other condition</label>
        <locationX>534</locationX>
        <locationY>1787</locationY>
        <assignmentItems>
            <assignToReference>$Record.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OwnerIdFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.BLN_BookingStatus__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>BookingStatusFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.BLN_VehicleRecordId__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>VehicleRecordId</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Special_BookingStatus_Owner</name>
        <label>Special BookingStatus &amp; Owner</label>
        <locationX>182</locationX>
        <locationY>911</locationY>
        <assignmentItems>
            <assignToReference>BookingStatus</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Specials</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Special_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Owner_is_changed</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Vehicle_record_Assignment</name>
        <label>Vehicle record Assignment</label>
        <locationX>50</locationX>
        <locationY>503</locationY>
        <assignmentItems>
            <assignToReference>VehicleRecordId</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Vehicle_Is_Special</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Vehicle_record_Assignment_To_Id</name>
        <label>Vehicle record Assignment To Id</label>
        <locationX>314</locationX>
        <locationY>503</locationY>
        <assignmentItems>
            <assignToReference>VehicleRecordId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.BLN_Vehicle__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Vehicle_Is_Special</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Owner_is_changed</name>
        <label>Owner is changed</label>
        <locationX>534</locationX>
        <locationY>1187</locationY>
        <defaultConnector>
            <targetReference>Owner_Booking_Status_for_other_condition</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Owner_check</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Recovery</targetReference>
            </connector>
            <label>Owner check</label>
        </rules>
    </decisions>
    <decisions>
        <name>Owner_is_Recovery</name>
        <label>Owner is Recovery</label>
        <locationX>380</locationX>
        <locationY>1403</locationY>
        <defaultConnector>
            <targetReference>Owner_Booking_Status_for_other_condition</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Outcome_of_Owner_is_Recovery</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Get_Recovery.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Booking_Status_Is_Recovery</targetReference>
            </connector>
            <label>Outcome of Owner is Recovery</label>
        </rules>
    </decisions>
    <decisions>
        <name>Vehicle_Blank_Check</name>
        <label>Vehicle Blank Check</label>
        <locationX>314</locationX>
        <locationY>395</locationY>
        <defaultConnector>
            <targetReference>Vehicle_Is_Special</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Vehicle_Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_Vehicle__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Vehicle_record_Assignment</targetReference>
            </connector>
            <label>Vehicle Blank</label>
        </rules>
        <rules>
            <name>Vehicle_Not_Blank</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_Vehicle__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Vehicle_record_Assignment_To_Id</targetReference>
            </connector>
            <label>Vehicle Not Blank</label>
        </rules>
    </decisions>
    <decisions>
        <name>Vehicle_is_changed</name>
        <label>Vehicle is changed</label>
        <locationX>534</locationX>
        <locationY>287</locationY>
        <defaultConnector>
            <targetReference>Owner_is_changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_vehicle_changed</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_Vehicle__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Vehicle_Blank_Check</targetReference>
            </connector>
            <label>Check vehicle changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Vehicle_Is_Special</name>
        <label>Vehicle Is Special</label>
        <locationX>314</locationX>
        <locationY>695</locationY>
        <defaultConnector>
            <targetReference>Owner_is_changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Special_Vehicle_Check</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BLN_Vehicle__r.BLN_SpecialVehicle__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Special_Queue</targetReference>
            </connector>
            <label>Special Vehicle Check</label>
        </rules>
    </decisions>
    <description>FOUK-5486 This flow is use to update booking status and ownerto special and recovery.</description>
    <environments>Default</environments>
    <formulas>
        <name>BookingStatusFormula</name>
        <dataType>String</dataType>
        <expression>IF( 
    AND( 
        NOT(ISBLANK({!BookingStatus})), 
        {!BookingStatus} != TEXT({!$Record.BLN_BookingStatus__c}) 
    ), 
    {!BookingStatus}, 
    TEXT({!$Record.BLN_BookingStatus__c}) 
)</expression>
    </formulas>
    <formulas>
        <name>IsNew</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>OwnerIdFormula</name>
        <dataType>String</dataType>
        <expression>IF(AND(NOT(ISBLANK({!OwnerId} )),{!OwnerId} != {!$Record.OwnerId}) , {!OwnerId}, {!$Record.OwnerId})</expression>
    </formulas>
    <interviewLabel>Booking Status Recovery Special {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Booking Status Recovery Special</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Recovery</name>
        <label>Get Recovery</label>
        <locationX>380</locationX>
        <locationY>1295</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Owner_is_Recovery</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BLN_RecoveryTeamQueue</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Special_Queue</name>
        <label>Get Special Queue</label>
        <locationX>182</locationX>
        <locationY>803</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Special_BookingStatus_Owner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BLN_SpecialTeam</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>408</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Vehicle_is_changed</targetReference>
        </connector>
        <filterFormula>AND( 
NOT({!$Permission.BLN_BypassFlows}),
NOT(ISBLANK({!$Record.OwnerId})),  
OR( ISNEW(), ISCHANGED({!$Record.BLN_Vehicle__c}), ISCHANGED({!$Record.OwnerId}))
)</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>BookingStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OwnerId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VehicleRecordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
