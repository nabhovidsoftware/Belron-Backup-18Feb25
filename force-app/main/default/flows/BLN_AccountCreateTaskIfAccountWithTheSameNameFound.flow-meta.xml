<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>BLN_ApexError</name>
        <label>Apex Error</label>
        <locationX>314</locationX>
        <locationY>1727</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>SetTaskCommentText</name>
        <label>Set Task Comment Text</label>
        <locationX>50</locationX>
        <locationY>1403</locationY>
        <assignmentItems>
            <assignToReference>taskRecord.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>taskCommentsText</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateTask</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetTaskDuplicateListText</name>
        <label>Set Task Duplicate List Text</label>
        <locationX>138</locationX>
        <locationY>1211</locationY>
        <assignmentItems>
            <assignToReference>taskRecord.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>taskDuplicateList</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>finalText</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>taskDuplicateList</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopAccounts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetTaskRecord</name>
        <label>Set Task Record</label>
        <locationX>50</locationX>
        <locationY>995</locationY>
        <assignmentItems>
            <assignToReference>taskRecord.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>High</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Possible Duplicate</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>taskRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopAccounts</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>check_person_account</name>
        <label>check person account</label>
        <locationX>314</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>GetDuplicateAccounts</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Person Account</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.BLN_Community_URL__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>update_url</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckIsDuplicate</name>
        <label>Check Is Duplicate</label>
        <locationX>314</locationX>
        <locationY>887</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>CID_IsDuplicate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetDuplicateAccounts</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetTask</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetTaskRecord</targetReference>
            </connector>
            <label>Is Duplicate</label>
        </rules>
    </decisions>
    <description>Create task to check if the record is duplicate when account with the same name is found.</description>
    <environments>Default</environments>
    <formulas>
        <name>baseUrl</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Api.Partner_Server_URL_260}, FIND( &apos;/services&apos;, {!$Api.Partner_Server_URL_260}))</expression>
    </formulas>
    <formulas>
        <description>to append accid to community URL</description>
        <name>newComUrl</name>
        <dataType>String</dataType>
        <expression>{!$Record.BLN_Community_URL__c}+&apos;&amp;accId=&apos;+{!$Record.Id}</expression>
    </formulas>
    <interviewLabel>Account - Create Task If Account With The Same Name Found {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Account - Create Task If Account With The Same Name Found</label>
    <loops>
        <name>LoopAccounts</name>
        <label>Loop Accounts</label>
        <locationX>50</locationX>
        <locationY>1103</locationY>
        <collectionReference>GetDuplicateAccounts</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>SetTaskDuplicateListText</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>SetTaskCommentText</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>BLN_CreateExceptionRecord</name>
        <label>Create Exception Record</label>
        <locationX>314</locationX>
        <locationY>1619</locationY>
        <connector>
            <targetReference>BLN_ApexError</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_AccountCreateTaskIfAccountWithTheSameNameFound</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>CreateTask</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateTask</name>
        <label>Create Task</label>
        <locationX>50</locationX>
        <locationY>1511</locationY>
        <faultConnector>
            <targetReference>BLN_CreateExceptionRecord</targetReference>
        </faultConnector>
        <inputReference>taskRecord</inputReference>
    </recordCreates>
    <recordLookups>
        <name>GetDuplicateAccounts</name>
        <label>GetDuplicateAccounts</label>
        <locationX>314</locationX>
        <locationY>671</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetTask</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Name</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetTask</name>
        <label>Get Task</label>
        <locationX>314</locationX>
        <locationY>779</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckIsDuplicate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Duplicate</stringValue>
            </value>
        </filters>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>update_url</name>
        <label>update url</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <connector>
            <targetReference>GetDuplicateAccounts</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>BLN_CreateExceptionRecord</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>BLN_Community_URL__c</field>
            <value>
                <elementReference>newComUrl</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>check_person_account</targetReference>
        </connector>
        <filterFormula>AND( 
NOT({!$Permission.BLN_BypassFlows}), OR(ISNEW(), ISCHANGED({!$Record.Name}) ) )</filterFormula>
        <object>Account</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>taskCommentsText</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Potential Account duplicates:
{!finalText}</text>
    </textTemplates>
    <textTemplates>
        <name>taskDuplicateList</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!taskRecord.Description}

{!LoopAccounts.Name}: {!baseUrl}{!LoopAccounts.Id}</text>
    </textTemplates>
    <variables>
        <name>finalText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>newUrl</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>taskRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
</Flow>
