<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Assign_last_value</name>
        <label>Assign last value</label>
        <locationX>138</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>picklistValueDisplay_Collection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>picklistTextDisplay_original</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>For_each_occurrences_of_comma</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_n_1_values_to_collection</name>
        <label>Assign n-1 values to collection</label>
        <locationX>402</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>picklistValueDisplay_Collection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>picklistValueDisplay_split</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>i</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>i_plus_plus</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Occurrences_of_comma_collection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>i</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>picklistTextDisplay_original</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>picklistValueDisplay_substitute</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>For_each_occurrences_of_comma</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Occurrences_assignment</name>
        <label>Occurrences assignment</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>Occurrences_of_comma_collection</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>For_each_occurrences_of_comma</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>BLN_ValidateData</name>
        <label>Validate Data</label>
        <locationX>380</locationX>
        <locationY>1334</locationY>
        <defaultConnector>
            <targetReference>FailScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Validate_Success</name>
            <conditionLogic>(1 AND 2) OR (3 AND 4) OR (5 AND 6)</conditionLogic>
            <conditions>
                <leftValueReference>Get_ARP_Record.BLN_AnswerType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Date</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>DateRegex</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_ARP_Record.BLN_AnswerType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Picklist</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_ARP_Record.BLN_PicklistValues__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>picklistValues.value</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_ARP_Record.BLN_AnswerType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Free Text</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>FreeTextRegex</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SuccessScreen</targetReference>
            </connector>
            <label>Validate Success</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Answer_Type</name>
        <label>Check Answer Type</label>
        <locationX>380</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>BLN_Validate_Data_Collect</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Answer_Type_Is_Picklist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_ARP_Record.BLN_AnswerType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Picklist</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_If_Picklist_Values_Are_Comma_Separated</targetReference>
            </connector>
            <label>Answer Type Is Picklist</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_If_Picklist_Values_Are_Comma_Separated</name>
        <label>Check If Picklist Values Are Comma Separated</label>
        <locationX>182</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>Error_Message</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Comma_Separated_Values</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ArePicklistValuesCommaSeparated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Occurrences_assignment</targetReference>
            </connector>
            <label>Comma Separated Values</label>
        </rules>
    </decisions>
    <decisions>
        <name>End_Loop</name>
        <label>End Loop?</label>
        <locationX>270</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>Assign_n_1_values_to_collection</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_all_comma_occurrences_finished</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Occurrences_of_comma_collection</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>Occurrences_of_comma_max</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_last_value</targetReference>
            </connector>
            <label>If all comma occurrences finished</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>ArePicklistValuesCommaSeparated</name>
        <dataType>Boolean</dataType>
        <expression>AND(
NOT(ISBLANK({!picklistTextDisplay_original})),
NOT(REGEX({!picklistTextDisplay_original},&quot;^[A-Za-z0-9,]+$&quot;))
)</expression>
    </formulas>
    <formulas>
        <name>DateRegex</name>
        <dataType>Boolean</dataType>
        <expression>REGEX( TEXT( {!Date}), {!Get_ARP_Record.BLN_AnswerValidation__c})</expression>
    </formulas>
    <formulas>
        <name>FreeTextRegex</name>
        <dataType>Boolean</dataType>
        <expression>REGEX({!FreeText}, {!Get_ARP_Record.BLN_AnswerValidation__c})</expression>
    </formulas>
    <formulas>
        <name>i_plus_plus</name>
        <dataType>Number</dataType>
        <expression>{!i} + 1</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>Occurrences_of_comma_max</name>
        <dataType>Number</dataType>
        <expression>(LEN({!Get_ARP_Record.BLN_PicklistValues__c}) - LEN(SUBSTITUTE(LOWER({!Get_ARP_Record.BLN_PicklistValues__c}),&quot;,&quot;,&quot;&quot;)))</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>picklistValueDisplay_split</name>
        <dataType>String</dataType>
        <expression>LEFT({!picklistTextDisplay_original}, FIND(&apos;,&apos;, {!picklistTextDisplay_original})-1)</expression>
    </formulas>
    <formulas>
        <name>picklistValueDisplay_substitute</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!picklistTextDisplay_original}, {!picklistValueDisplay_split} &amp; &apos;,&apos;, &apos;&apos;)</expression>
    </formulas>
    <interviewLabel>Data Collect Question Test Form {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Data Collect Question Test Form</label>
    <loops>
        <name>For_each_occurrences_of_comma</name>
        <label>For each occurrences of comma</label>
        <locationX>50</locationX>
        <locationY>566</locationY>
        <collectionReference>Occurrences_of_comma_collection</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>End_Loop</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>BLN_Validate_Data_Collect</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_ARP_Record</name>
        <label>Get ARP Record</label>
        <locationX>380</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Answer_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>BLN_AccountRuleParameter__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>BLN_Validate_Data_Collect</name>
        <label>Validate Data Collect</label>
        <locationX>380</locationX>
        <locationY>1226</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>BLN_ValidateData</targetReference>
        </connector>
        <fields>
            <name>QuestionLabel</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span class=&quot;ql-cursor&quot;&gt;﻿&lt;/span&gt;{!Get_ARP_Record.BLN_Question__c}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Date</name>
            <dataType>Date</dataType>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_ARP_Record.BLN_AnswerType__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Date</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>FreeText</name>
            <dataType>String</dataType>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_ARP_Record.BLN_AnswerType__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Free Text</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>picklistValues</name>
            <extensionName>c:bln_ArpDataCollectPicklist</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>optionsFromFlow</name>
                <value>
                    <elementReference>picklistValueDisplay_Collection</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>selectedPicklistValue</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_ARP_Record.BLN_AnswerType__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Picklist</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Validate</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Error_Message</name>
        <label>Error Screen for Correct Format</label>
        <locationX>314</locationX>
        <locationY>458</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>errormessagfield</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 16px; color: rgb(195, 28, 28);&quot;&gt;{!$Label.BLN_CommaSeparatedValues}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>FailScreen</name>
        <label>FailScreen</label>
        <locationX>512</locationX>
        <locationY>1442</locationY>
        <allowBack>true</allowBack>
        <allowFinish>false</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>BLN_Validate_Data_Collect</targetReference>
        </connector>
        <fields>
            <name>FailMessage</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 20px; color: rgb(205, 17, 17);&quot;&gt;{!Get_ARP_Record.BLN_ValidationMessage__c}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>SuccessScreen</name>
        <label>SuccessScreen</label>
        <locationX>248</locationX>
        <locationY>1442</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>DisplaySuccess</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(26, 169, 24); font-size: 20px;&quot;&gt;Success - Data Validated!&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_ARP_Record</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>currentItemFromSourceCollection</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>i</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>Occurrences_of_comma_collection</name>
        <dataType>Number</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>picklistTextDisplay_original</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>Get_ARP_Record.BLN_PicklistValues__c</elementReference>
        </value>
    </variables>
    <variables>
        <name>picklistValueDisplay_Collection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Account Rule Parameter record Id</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>selectedPicklistValue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
