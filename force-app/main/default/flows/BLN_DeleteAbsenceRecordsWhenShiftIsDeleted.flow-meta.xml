<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <decisions>
        <name>Checking_If_Absence_records_exist</name>
        <label>Checking If Absence records exist</label>
        <locationX>314</locationX>
        <locationY>503</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Absence_Recs_Exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Absence_Records</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_Absence_Records</targetReference>
            </connector>
            <label>If Absence Recs Exist</label>
        </rules>
    </decisions>
    <description>FOUK-2250</description>
    <environments>Default</environments>
    <formulas>
        <name>EndTime</name>
        <dataType>DateTime</dataType>
        <expression>{!$Record.StartTime} + VALUE(TEXT({!$Record.ServiceTerritory.BLN_BulkStockCollectionTime__c})) /1440</expression>
    </formulas>
    <interviewLabel>Delete Absence Records When Shift is Deleted {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Delete Absence Records When Shift is Deleted</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Error_Exception_logs</name>
        <label>Create Error Exception logs</label>
        <locationX>314</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_DeleteAbsenceRecordsWhenShiftIsDeleted</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <stringValue>Exception</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <stringValue>Deleting Resource Absence Records</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <name>Delete_Absence_Records</name>
        <label>Delete Absence Records</label>
        <locationX>50</locationX>
        <locationY>611</locationY>
        <faultConnector>
            <targetReference>Create_Error_Exception_logs</targetReference>
        </faultConnector>
        <inputReference>Get_Absence_Records</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>Get_Absence_Records</name>
        <label>Get Absence Records</label>
        <locationX>314</locationX>
        <locationY>395</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Checking_If_Absence_records_exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ResourceId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceResourceId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Stock Collection</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Non_Availability_RecordType.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Start</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.StartTime</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ResourceAbsence</object>
        <sortField>Start</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Non_Availability_RecordType</name>
        <label>Non Availability RecordType</label>
        <locationX>314</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Absence_Records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.BLN_NonAvailabilityRecordType</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Non_Availability_RecordType</targetReference>
        </connector>
        <filterFormula>({!$Permission.BLN_BypassFlows} = False)</filterFormula>
        <object>Shift</object>
        <recordTriggerType>Delete</recordTriggerType>
        <triggerType>RecordBeforeDelete</triggerType>
    </start>
    <status>Active</status>
</Flow>
