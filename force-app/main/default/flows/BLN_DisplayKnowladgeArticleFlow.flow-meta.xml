<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Assignment_1</name>
        <label>Assignment 1</label>
        <locationX>1964</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>Title_Collection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TitleURL</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_KA_type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_for_existing_motorist</name>
        <label>Assignment for existing motorist</label>
        <locationX>1458</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>CollectionForexistingMotorist</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TitleURL</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_for_Features</name>
        <label>Assignment for Features</label>
        <locationX>1898</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>CollectionForFeatures</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TitleURL</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_for_Insurance_case</name>
        <label>Assignment for Insurance case</label>
        <locationX>1018</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>collectionForInsurance</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TitleURL</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_for_special_flag</name>
        <label>Assignment for special flag</label>
        <locationX>578</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>CollectionForSpecialFlag</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TitleURL</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_For_Vaps</name>
        <label>Assignment For Vaps</label>
        <locationX>2338</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>CollectionForVaps</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TitleURL</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_of_Motability_Account</name>
        <label>Assignment of Motability Account</label>
        <locationX>2778</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>CollectionMotabilityAccount</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TitleURL</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignmentforassignment</name>
        <label>Assignmentforassignment</label>
        <locationX>138</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>collectionforISP</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TitleURL</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Quotearticles</name>
        <label>Quotearticles</label>
        <locationX>3218</locationX>
        <locationY>1214</locationY>
        <assignmentItems>
            <assignToReference>collectionforQuote</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TitleURL</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Account_Exist</name>
        <label>Check Account Exist</label>
        <locationX>1590</locationX>
        <locationY>1106</locationY>
        <defaultConnector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Account_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_account.Id</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>Get_account.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PersonAccount</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_account</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assignment_for_existing_motorist</targetReference>
            </connector>
            <label>Account exist</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Billing_method</name>
        <label>Check Billing method on case</label>
        <locationX>2030</locationX>
        <locationY>1106</locationY>
        <defaultConnector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Cash</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Cases.BLN_BillingMethod__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cash</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Cases</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assignment_for_Features</targetReference>
            </connector>
            <label>Cash</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_boolean</name>
        <label>Check boolean</label>
        <locationX>2470</locationX>
        <locationY>1106</locationY>
        <defaultConnector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>flag_true</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isVapsEnabled</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Iterate_knowledge_article.BLN_DisplayLocation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quote Presentation</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assignment_For_Vaps</targetReference>
            </connector>
            <label>flag true</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_boolean_flag</name>
        <label>Check boolean flag</label>
        <locationX>3350</locationX>
        <locationY>1106</locationY>
        <defaultConnector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>quote_summary</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>booleanFlagQuote</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Quotearticles</targetReference>
            </connector>
            <label>quote summary</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_boolean_flag_ISP</name>
        <label>Check boolean flag ISP</label>
        <locationX>270</locationX>
        <locationY>1106</locationY>
        <defaultConnector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>show_all_cases</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Cases.Account.Id</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>Cases</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assignmentforassignment</targetReference>
            </connector>
            <label>show all cases</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Case_method</name>
        <label>Check Case method</label>
        <locationX>1150</locationX>
        <locationY>1106</locationY>
        <defaultConnector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Insurance</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Cases.BLN_BillingMethod__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Insurance / Account</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Cases</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assignment_for_Insurance_case</targetReference>
            </connector>
            <label>Insurance</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_flag</name>
        <label>Check flag</label>
        <locationX>710</locationX>
        <locationY>1106</locationY>
        <defaultConnector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>flag</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Cases.BLN_Vehicle__r.BLN_SpecialVehicle__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Cases</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assignment_for_special_flag</targetReference>
            </connector>
            <label>flag</label>
        </rules>
    </decisions>
    <decisions>
        <name>check_get_article</name>
        <label>check get article</label>
        <locationX>182</locationX>
        <locationY>674</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>check_get_article1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_knowledge_article</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Iterate_knowledge_article</targetReference>
            </connector>
            <label>check get article1</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_KA_type</name>
        <label>Check KA type</label>
        <locationX>1964</locationX>
        <locationY>998</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Article_type</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Iterate_knowledge_article.BLN_ArticleType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ISP Knowledge</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_boolean_flag_ISP</targetReference>
            </connector>
            <label>IS ISP knowledge</label>
        </rules>
        <rules>
            <name>special_Flag</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Iterate_knowledge_article.BLN_ArticleType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Specials Flag</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_flag</targetReference>
            </connector>
            <label>special Flag</label>
        </rules>
        <rules>
            <name>Insurance_Case</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Iterate_knowledge_article.BLN_ArticleType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Insurance Case</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Case_method</targetReference>
            </connector>
            <label>Insurance Case</label>
        </rules>
        <rules>
            <name>existing_motorist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Iterate_knowledge_article.BLN_ArticleType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Existing Motorist</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Account_Exist</targetReference>
            </connector>
            <label>existing motorist</label>
        </rules>
        <rules>
            <name>Features_and_Benefits</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Iterate_knowledge_article.BLN_ArticleType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Features and Benefits</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Billing_method</targetReference>
            </connector>
            <label>Features and Benefits</label>
        </rules>
        <rules>
            <name>VAPs</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Iterate_knowledge_article.BLN_ArticleType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>VAPs</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_boolean</targetReference>
            </connector>
            <label>VAPs</label>
        </rules>
        <rules>
            <name>Mobility_Account</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Iterate_knowledge_article.BLN_ArticleType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Motability Accounts</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Related_mobility_account</targetReference>
            </connector>
            <label>Mobility Account</label>
        </rules>
        <rules>
            <name>display_location</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Iterate_knowledge_article.BLN_DisplayLocation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quote Summary</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_boolean_flag</targetReference>
            </connector>
            <label>display location</label>
        </rules>
    </decisions>
    <decisions>
        <name>check_record_type</name>
        <label>check record type</label>
        <locationX>512</locationX>
        <locationY>458</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>check_record_type1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Recordstype</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_knowledge_article</targetReference>
            </connector>
            <label>check record type1</label>
        </rules>
    </decisions>
    <decisions>
        <name>Related_mobility_account</name>
        <label>Related mobility account</label>
        <locationX>2910</locationX>
        <locationY>1106</locationY>
        <defaultConnector>
            <targetReference>Iterate_knowledge_article</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Relatedmobilityaccount</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isWiperEnabled</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Iterate_knowledge_article.BLN_DisplayLocation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quote Presentation</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assignment_of_Motability_Account</targetReference>
            </connector>
            <label>Related mobility account</label>
        </rules>
    </decisions>
    <description>FOUK-5442 to display knowledge articles</description>
    <environments>Default</environments>
    <formulas>
        <name>FormatCollectionforSpecialFlag</name>
        <dataType>String</dataType>
        <expression>TRIM(SUBSTITUTE(SUBSTITUTE({!CollectionForSpecialFlag}, &apos;[&apos;, &apos;&apos;), &apos;]&apos;, &apos;&apos;))</expression>
    </formulas>
    <formulas>
        <name>FormatExistingMotorist</name>
        <dataType>String</dataType>
        <expression>TRIM(SUBSTITUTE(SUBSTITUTE({!CollectionForexistingMotorist}, &apos;[&apos;, &apos;&apos;), &apos;]&apos;, &apos;&apos;))</expression>
    </formulas>
    <formulas>
        <name>FormatFeatures</name>
        <dataType>String</dataType>
        <expression>TRIM(SUBSTITUTE(SUBSTITUTE({!CollectionForFeatures}, &apos;[&apos;, &apos;&apos;), &apos;]&apos;, &apos;&apos;))</expression>
    </formulas>
    <formulas>
        <name>FormatForVAPs</name>
        <dataType>String</dataType>
        <expression>TRIM(SUBSTITUTE(SUBSTITUTE({!CollectionForVaps}, &apos;[&apos;, &apos;&apos;), &apos;]&apos;, &apos;&apos;))</expression>
    </formulas>
    <formulas>
        <name>FormatInsurance</name>
        <dataType>String</dataType>
        <expression>TRIM(SUBSTITUTE(SUBSTITUTE({!collectionForInsurance}, &apos;[&apos;, &apos;&apos;), &apos;]&apos;, &apos;&apos;))</expression>
    </formulas>
    <formulas>
        <name>FormatMotabilityAccount</name>
        <dataType>String</dataType>
        <expression>TRIM(SUBSTITUTE(SUBSTITUTE({!CollectionMotabilityAccount}, &apos;[&apos;, &apos;&apos;), &apos;]&apos;, &apos;&apos;))</expression>
    </formulas>
    <formulas>
        <name>FormatQuote</name>
        <dataType>String</dataType>
        <expression>TRIM(SUBSTITUTE(SUBSTITUTE({!collectionforQuote}, &apos;[&apos;, &apos;&apos;), &apos;]&apos;, &apos;&apos;))</expression>
    </formulas>
    <formulas>
        <name>ResultantFeatures</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!FormatFeatures}, &quot;,&quot;, &apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>ResultantForVaps</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!FormatForVAPs}, &quot;,&quot;, &apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>ResultantInsurance</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!FormatInsurance}, &quot;,&quot;, &apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>ResultantMotabilityAccount</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!FormatMotabilityAccount}, &quot;,&quot;, &apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>ResultantMotoristExisting</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!FormatExistingMotorist}, &quot;,&quot;, &apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>ResultantQuote</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!FormatQuote}, &quot;,&quot;, &apos;&apos;)</expression>
    </formulas>
    <formulas>
        <name>ResultantSpecialFlag</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!FormatCollectionforSpecialFlag}, &quot;,&quot;, &apos;&apos;)</expression>
    </formulas>
    <interviewLabel>Display Knoledge Article {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Display Knowledge Article</label>
    <loops>
        <name>Iterate_knowledge_article</name>
        <label>Iterate knowledge article</label>
        <locationX>50</locationX>
        <locationY>782</locationY>
        <collectionReference>Get_knowledge_article</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assignment_1</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Display_knowledge_article</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Cases</name>
        <label>Cases</label>
        <locationX>512</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_account</targetReference>
        </connector>
        <faultConnector>
            <targetReference>articles</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_account</name>
        <label>Get account</label>
        <locationX>512</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Recordstype</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>articles</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>accountid</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_knowledge_article</name>
        <label>Get knowledge article</label>
        <locationX>182</locationX>
        <locationY>566</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>check_get_article</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>articles</targetReference>
        </faultConnector>
        <filterLogic>(1 OR 2) AND 3 AND 4</filterLogic>
        <filters>
            <field>BLN_ArticleType__c</field>
            <operator>NotEqualTo</operator>
        </filters>
        <filters>
            <field>BLN_DisplayLocation__c</field>
            <operator>NotEqualTo</operator>
        </filters>
        <filters>
            <field>PublishStatus</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Online</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Recordstype.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Knowledge__kav</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Recordstype</name>
        <label>Get Recordtype</label>
        <locationX>512</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>check_record_type</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>articles</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Procedure</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>articles</name>
        <label>articles</label>
        <locationX>1634</locationX>
        <locationY>242</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>test</name>
            <fieldText>&lt;p&gt;{!$Label.BLN_ArticleAccess}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Display_knowledge_article</name>
        <label>Knowledge Articles</label>
        <locationX>50</locationX>
        <locationY>1574</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>Display_knowledge_article_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>Display_knowledge_article_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>DisplayArticles</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 24px;&quot;&gt;Knowledge Articles&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>or</conditionLogic>
                        <conditions>
                            <leftValueReference>ResultantFeatures</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                        <conditions>
                            <leftValueReference>ResultantInsurance</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                        <conditions>
                            <leftValueReference>ResultantMotoristExisting</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                        <conditions>
                            <leftValueReference>ResultantForVaps</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                        <conditions>
                            <leftValueReference>ResultantSpecialFlag</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                        <conditions>
                            <leftValueReference>ResultantQuote</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                        <conditions>
                            <leftValueReference>ResultantMotabilityAccount</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>test4</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;{!ResultantFeatures}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;{!ResultantInsurance}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;{!ResultantMotoristExisting}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;{!ResultantForVaps}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;{!ResultantSpecialFlag}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;{!ResultantQuote}&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;{!ResultantMotabilityAccount}&lt;/span&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>386</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Cases</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>TitleURL</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;a href=&quot;{!$Label.BLN_OrgUrl}/r/Knowledge__kav/{!Iterate_knowledge_article.Id}/view&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;{!Iterate_knowledge_article.Title}&lt;/a&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>accountid</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>booleanFlagQuote</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Case</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>CaseId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>CollectionForexistingMotorist</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>CollectionForFeatures</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>collectionForInsurance</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>collectionforISP</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>collectionforQuote</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>CollectionForSpecialFlag</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>CollectionForVaps</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>CollectionMotabilityAccount</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>isVapsEnabled</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>isWiperEnabled</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Title_Collection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
