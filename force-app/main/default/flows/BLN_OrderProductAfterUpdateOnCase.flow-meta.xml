<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Copy_1_of_Flow_Exception</name>
        <label>Flow Exception</label>
        <locationX>314</locationX>
        <locationY>1595</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <actionCalls>
        <name>Flow_Exception</name>
        <label>Flow Exception</label>
        <locationX>842</locationX>
        <locationY>1271</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>Calculate_Amount</name>
        <label>Calculate Amount</label>
        <locationX>798</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>FinalAmount</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>calculate_total_price.TotalPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>FinalAmount</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>calculate_total_price.BLN_TotalTax__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>calculate_total_price</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Case_Found</name>
        <label>Check Case Found</label>
        <locationX>314</locationX>
        <locationY>1271</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Case</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case</targetReference>
            </connector>
            <label>Case Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>check_order_found</name>
        <label>Check Order Found</label>
        <locationX>710</locationX>
        <locationY>947</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Order_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Order</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_order</targetReference>
            </connector>
            <label>Order Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Order_Product_Found</name>
        <label>Check Order Product Found</label>
        <locationX>1040</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Order_Product_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_all_Order_Product</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>calculate_total_price</targetReference>
            </connector>
            <label>Order Product Found</label>
        </rules>
    </decisions>
    <description>FOUK-4080. This Flow will calculate total amount on all order products and update order and case</description>
    <environments>Default</environments>
    <interviewLabel>Order Product After Update {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Order Product After Update</label>
    <loops>
        <name>calculate_total_price</name>
        <label>calculate total price</label>
        <locationX>710</locationX>
        <locationY>539</locationY>
        <collectionReference>Get_all_Order_Product</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Calculate_Amount</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_Order</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Exception_Logger</name>
        <label>Create Exception Logger</label>
        <locationX>842</locationX>
        <locationY>1163</locationY>
        <connector>
            <targetReference>Flow_Exception</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_OrderProductAfterUpdateOnCase</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <stringValue>Exception</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Update_order</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Exception_Logger1</name>
        <label>Create Exception Logger</label>
        <locationX>314</locationX>
        <locationY>1487</locationY>
        <connector>
            <targetReference>Copy_1_of_Flow_Exception</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_OrderProductAfterUpdateOnCase</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <stringValue>Exception</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Update_Case</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_all_Order_Product</name>
        <label>Get all Order Product</label>
        <locationX>1040</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Order_Product_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Order.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>BLN_IsProductSelected__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OrderItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_Case</name>
        <label>get Case</label>
        <locationX>314</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Case_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Order.BLN_Case__r.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Order</name>
        <label>Get Order</label>
        <locationX>710</locationX>
        <locationY>839</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>check_order_found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Order.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Accepted</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>50</locationX>
        <locationY>1379</locationY>
        <faultConnector>
            <targetReference>Create_Exception_Logger1</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>get_Case.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>BLN_TotalMotoristLiability__c</field>
            <value>
                <elementReference>FinalAmount</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_order</name>
        <label>Update order</label>
        <locationX>314</locationX>
        <locationY>1055</locationY>
        <connector>
            <targetReference>get_Case</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_Logger</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Order.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Accepted</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>BLN_TotalIncludingTaxMotorist__c</field>
            <value>
                <elementReference>FinalAmount</elementReference>
            </value>
        </inputAssignments>
        <object>Order</object>
    </recordUpdates>
    <start>
        <locationX>914</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_all_Order_Product</targetReference>
        </connector>
        <filterFormula>NOT({!$Permission.BLN_BypassFlows}) &amp;&amp;
ISCHANGED({!$Record.BLN_ProductChangeType__c}) &amp;&amp;
ISPICKVAL({!$Record.Order.Status}, &apos;Accepted&apos;)</filterFormula>
        <object>OrderItem</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>FinalAmount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
</Flow>
