<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Apex_action</name>
        <label>Apex action</label>
        <locationX>578</locationX>
        <locationY>539</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <decisions>
        <name>Null_Check</name>
        <label>Null Check</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_not_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Corporate</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Call_coverage_verification_sub_flow</targetReference>
            </connector>
            <label>If not null</label>
        </rules>
    </decisions>
    <description>FOUK-4941, This flow is created for updating the Coverage Verification Theme Checkbox on the case object.</description>
    <environments>Default</environments>
    <formulas>
        <name>CoverageVerificationTheme</name>
        <dataType>Boolean</dataType>
        <expression>IF( ({!CoverageVerification} &amp;&amp; {!CoverageVerification} &lt;&gt;{!$Record.BLN_CoverageVerificationTheme__c}), {!CoverageVerification}, {!$Record.BLN_CoverageVerificationTheme__c} )</expression>
    </formulas>
    <formulas>
        <name>provisionalDriverFormula</name>
        <dataType>String</dataType>
        <expression>IF(
    AND(
        NOT(ISBLANK({!ProvisionalDriver})), 
        {!ProvisionalDriver} != {!currentProvisionalDriver}), 
    {!ProvisionalDriver}, 
   {!currentProvisionalDriver}
)</expression>
    </formulas>
    <interviewLabel>Coverage Verification Theme Check {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Coverage Verification Theme Check</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Exception_records</name>
        <label>Create Exception records</label>
        <locationX>578</locationX>
        <locationY>431</locationY>
        <connector>
            <targetReference>Apex_action</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_CurrentUser__c</field>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_CoverageVerificationThemeCheck</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <elementReference>$Label.BLN_ExceptionValue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Get_Corporate.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_FlowException__e</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Corporate</name>
        <label>Get Corporate</label>
        <locationX>182</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Null_Check</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Create_Exception_records</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BLN_Corporate__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>BLN_Corporate__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Corporate</targetReference>
        </connector>
        <filterFormula>AND(
OR(ISNEW(), ISCHANGED({!$Record.BLN_Corporate__c})),
	NOT({!$Permission.BLN_BypassFlows}),
	ISPICKVAL({!$Record.Type},&apos;Job Request&apos;),
	ISPICKVAL({!$Record.BLN_SubType__c},&apos;Job Request&apos;)
)</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>Call_coverage_verification_sub_flow</name>
        <label>Call coverage verification sub flow</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <flowName>BLN_CoverageVerificationThemCheckSubFlow</flowName>
        <inputAssignments>
            <name>CaseRec</name>
            <value>
                <elementReference>$Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>CorpRec</name>
            <value>
                <elementReference>Get_Corporate</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <name>CaseRec</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <elementReference>$Record.Id</elementReference>
        </value>
    </variables>
    <variables>
        <name>CorpRec</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <elementReference>$Record.BLN_Corporate__c</elementReference>
        </value>
    </variables>
    <variables>
        <name>CoverageVerification</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>currentProvisionalDriver</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Record.BLN_ProvisionalDriver__c</elementReference>
        </value>
    </variables>
    <variables>
        <name>ProvisionalDriver</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
