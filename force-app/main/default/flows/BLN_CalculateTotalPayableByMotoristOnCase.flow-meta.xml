<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Add_TotalPrice_To_TotalPayableByMotorist</name>
        <label>Add TotalPrice To TotalPayableByMotorist</label>
        <locationX>270</locationX>
        <locationY>1487</locationY>
        <assignmentItems>
            <assignToReference>TotalPayableByMotorist</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Over_OLIs.TotalPrice</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_OLIs</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Initialize_TotalPayableByMotorist</name>
        <label>Initialize TotalPayableByMotorist</label>
        <locationX>182</locationX>
        <locationY>1163</locationY>
        <assignmentItems>
            <assignToReference>TotalPayableByMotorist</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_OLIs</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>store_Case</name>
        <label>store Case</label>
        <locationX>50</locationX>
        <locationY>1871</locationY>
        <assignmentItems>
            <assignToReference>updatedCase.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.BLN_WorkOrder__r.CaseId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>updatedCase.BLN_TotalPayableByMotorist__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>TotalPayableByMotorist</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Store_ProductIds</name>
        <label>Store ProductIds</label>
        <locationX>699</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>productIdSet</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_over_PRs.Product2Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_over_PRs</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Empty_productIdSet</name>
        <label>Empty productIdSet?</label>
        <locationX>611</locationX>
        <locationY>839</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>productIdSet</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Order_Items</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Got_OrderItems</name>
        <label>Got OrderItems?</label>
        <locationX>380</locationX>
        <locationY>1055</locationY>
        <defaultConnectorLabel>Doesnot get OLI</defaultConnectorLabel>
        <rules>
            <name>Got_OLI</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Order_Items</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Initialize_TotalPayableByMotorist</targetReference>
            </connector>
            <label>Got OLI</label>
        </rules>
    </decisions>
    <decisions>
        <name>Got_PR_Recs_or_Not</name>
        <label>Got PR Recs or Not</label>
        <locationX>858</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Doesnot get PRs</defaultConnectorLabel>
        <rules>
            <name>Got_PRs</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Temporary_Consumed_PR_on_WO</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_over_PRs</targetReference>
            </connector>
            <label>Got PRs</label>
        </rules>
    </decisions>
    <decisions>
        <name>if_Price_is_greater_than_0</name>
        <label>if Price is greater than 0</label>
        <locationX>402</locationX>
        <locationY>1379</locationY>
        <defaultConnector>
            <targetReference>Loop_Over_OLIs</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>0/Negative</defaultConnectorLabel>
        <rules>
            <name>Positive</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Over_OLIs.TotalPrice</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_TotalPrice_To_TotalPayableByMotorist</targetReference>
            </connector>
            <label>Positive</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_TotalPayableByMotorist_is_greater_than_0</name>
        <label>If TotalPayableByMotorist is greater than 0</label>
        <locationX>182</locationX>
        <locationY>1763</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_greater_than_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>TotalPayableByMotorist</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>store_Case</targetReference>
            </connector>
            <label>Yes greater than 0</label>
        </rules>
    </decisions>
    <description>FOUK-4081-Calculate TotalPayableByMotorist On Case when Product Required are temporary consumed.</description>
    <environments>Default</environments>
    <interviewLabel>Calculate Total Price on Case {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Calculate TotalPayableByMotorist On Case</label>
    <loops>
        <name>Loop_Over_OLIs</name>
        <label>Loop Over OLIs</label>
        <locationX>182</locationX>
        <locationY>1271</locationY>
        <collectionReference>Get_Order_Items</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>if_Price_is_greater_than_0</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>If_TotalPayableByMotorist_is_greater_than_0</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_over_PRs</name>
        <label>Loop over PRs</label>
        <locationX>611</locationX>
        <locationY>539</locationY>
        <collectionReference>Get_Temporary_Consumed_PR_on_WO</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Store_ProductIds</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Empty_productIdSet</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Order_Items</name>
        <label>Get Order Items</label>
        <locationX>380</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Got_OrderItems</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BLN_WorkOrder__r.BLN_Order__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Product2Id</field>
            <operator>In</operator>
            <value>
                <elementReference>productIdSet</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OrderItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Temporary_Consumed_PR_on_WO</name>
        <label>Get Temporary Consumed PR on WO</label>
        <locationX>858</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Got_PR_Recs_or_Not</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>BLN_WorkOrder__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BLN_WorkOrder__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>BLN_IsConsumed__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ProductRequired</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>732</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Temporary_Consumed_PR_on_WO</targetReference>
        </connector>
        <filterFormula>{!$Permission.BLN_BypassFlows} = False
&amp;&amp; {!$Record.BLN_IsConsumed__c} = True</filterFormula>
        <object>ProductRequired</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <subflows>
        <name>update_Case</name>
        <label>update Case</label>
        <locationX>50</locationX>
        <locationY>1979</locationY>
        <flowName>BLN_UpdateCaseOnSystemContext</flowName>
        <inputAssignments>
            <name>updatedCase</name>
            <value>
                <elementReference>updatedCase</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <name>productIdSet</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>TotalPayableByMotorist</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>updatedCase</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
</Flow>
