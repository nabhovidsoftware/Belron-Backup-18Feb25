<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Exception_error</name>
        <label>Exception error</label>
        <locationX>314</locationX>
        <locationY>2232</locationY>
        <actionName>BLN_FlowExceptionLogger</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>excmessage</name>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>BLN_FlowExceptionLogger</nameSegment>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Check_Size</name>
        <label>Check Size</label>
        <locationX>558</locationX>
        <locationY>1524</locationY>
        <assignmentItems>
            <assignToReference>TaskSize</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>For_Task</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SA_Size</name>
        <label>SA Size</label>
        <locationX>822</locationX>
        <locationY>816</locationY>
        <assignmentItems>
            <assignToReference>SASize</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>For_SA</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Case_Conditions</name>
        <label>Case Conditions</label>
        <locationX>314</locationX>
        <locationY>1908</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Check</name>
            <conditionLogic>1 AND 2 AND 3 AND (4 OR 5 OR (6 AND 7))</conditionLogic>
            <conditions>
                <leftValueReference>Get_Case_Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case_Record.BLN_SubType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case_Record.BLN_BookingStatus__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quality</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case_Record.BLN_OutstandingBalance__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case_Record.BLN_OutstandingBalance__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case_Record.BLN_OutstandingBalance__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case_Record.BLN_DebtorFlag__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Record</targetReference>
            </connector>
            <label>Case Check</label>
        </rules>
    </decisions>
    <decisions>
        <name>Get_All_SA_Not_Null_check</name>
        <label>Get All SA Not Null check</label>
        <locationX>842</locationX>
        <locationY>600</locationY>
        <defaultConnector>
            <targetReference>SA_Records_Size</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SA_Not_Null_check</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_All_Related_SA</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>For_SA</targetReference>
            </connector>
            <label>SA Not Null check</label>
        </rules>
    </decisions>
    <decisions>
        <name>Get_Case_Not_Null_check</name>
        <label>Get Case Not Null check</label>
        <locationX>1106</locationX>
        <locationY>384</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Not_Null_check</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Case_Record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_All_Related_SA</targetReference>
            </connector>
            <label>Case Not Null check</label>
        </rules>
    </decisions>
    <decisions>
        <name>Get_Task_Not_Null_check</name>
        <label>Get Task Not Null check</label>
        <locationX>578</locationX>
        <locationY>1308</locationY>
        <defaultConnector>
            <targetReference>Task_Record_Size</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Task_Not_Null_check</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Task_Record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>For_Task</targetReference>
            </connector>
            <label>Task Not Null check</label>
        </rules>
    </decisions>
    <decisions>
        <name>SA_Records_Size</name>
        <label>SA Records Size</label>
        <locationX>842</locationX>
        <locationY>1092</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Size_Check_SA</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SASize</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Task_Record</targetReference>
            </connector>
            <label>Size Check SA</label>
        </rules>
    </decisions>
    <decisions>
        <name>Task_Record_Size</name>
        <label>Task Record Size</label>
        <locationX>578</locationX>
        <locationY>1800</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Record_Size</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>TaskSize</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Conditions</targetReference>
            </connector>
            <label>Record Size</label>
        </rules>
    </decisions>
    <description>FOUK-6897 This flow is used for Automatic closure of job request cases.</description>
    <environments>Default</environments>
    <formulas>
        <name>RecordId</name>
        <dataType>String</dataType>
        <expression>{!$Record.Id}</expression>
    </formulas>
    <interviewLabel>Automatic Closure Of Job Request Cases {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Automatic Closure Of Job Request Cases</label>
    <loops>
        <name>For_SA</name>
        <label>For SA</label>
        <locationX>734</locationX>
        <locationY>708</locationY>
        <collectionReference>Get_All_Related_SA</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>SA_Size</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>SA_Records_Size</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>For_Task</name>
        <label>For Task</label>
        <locationX>470</locationX>
        <locationY>1416</locationY>
        <collectionReference>Get_Task_Record</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_Size</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Task_Record_Size</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Exception_Logger</name>
        <label>Create Exception Logger</label>
        <locationX>314</locationX>
        <locationY>2124</locationY>
        <connector>
            <targetReference>Exception_error</targetReference>
        </connector>
        <inputAssignments>
            <field>BLN_EntityName__c</field>
            <value>
                <stringValue>BLN_AutomaticClosureOfJobRequestCases</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ErrorMessage__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_ExceptionType__c</field>
            <value>
                <stringValue>Exception</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_LogType__c</field>
            <value>
                <stringValue>Exception</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_MethodStep__c</field>
            <value>
                <elementReference>Update_Case_Record</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BLN_RecordIdIdentifier__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>BLN_ExceptionLogger__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_All_Related_SA</name>
        <label>Get All Related SA</label>
        <locationX>842</locationX>
        <locationY>492</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_All_SA_Not_Null_check</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>BLN_Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Case_Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ServiceAppointment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Case_Record</name>
        <label>Get Case Record</label>
        <locationX>1106</locationX>
        <locationY>276</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Case_Not_Null_check</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BLN_Case__r.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Task_Record</name>
        <label>Get Task Record</label>
        <locationX>578</locationX>
        <locationY>1200</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Task_Not_Null_check</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Case_Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_Record</name>
        <label>Update Case Record</label>
        <locationX>50</locationX>
        <locationY>2016</locationY>
        <faultConnector>
            <targetReference>Create_Exception_Logger</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.BLN_Case__r.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Closed-Completed</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <filterFormula>AND(
    NOT({!$Permission.BLN_BypassFlows}),
    ISPICKVAL({!$Record.Status}, &apos;Completed&apos;),
    OR(
        ISNEW(),
        ISCHANGED({!$Record.Status}),
        ISCHANGED({!$Record.BLN_SubStatus__c})
    ),
    ISPICKVAL({!$Record.BLN_SubStatus__c}, &apos;Customer Handover Completed&apos;)
)</filterFormula>
        <object>ServiceAppointment</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <name>run_after_1_minute</name>
            <connector>
                <targetReference>Get_Case_Record</targetReference>
            </connector>
            <label>run after 1 minute</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <recordField>LastModifiedDate</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>SASize</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>TaskSize</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
